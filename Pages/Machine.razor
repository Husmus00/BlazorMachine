@page "/machine"
<div class="wrapper-div">
    <div class="machine-container">
        <div class="title-bar">
            <h3>Machine</h3>
        </div>
        <div class="input-output-windows">
            <div class="input-container">
                <div class="program-input box">
                    <div class="window-title-container">
                        <p class="window-title">Program Input</p>
                        <div class="hr-lines"></div>
                        <span>&#9781</span>
                    </div>
                    <div class="box-content">
                        <EditForm Model="@exampleModel" OnSubmit="@HandleInputSubmit" class="programTextForm">
                            <InputTextArea @bind-Value="programInput" class="programTextArea" />
                        </EditForm>
                    </div>
                </div>
                <div class="command-input box">
                    <div class="window-title-container">
                        <p class="window-title">Command Input</p>
                        <div class="hr-lines"></div>
                        <span>&#9781</span>
                    </div>
                    <div class="box-content command-input-line">
                        <p>>></p>
                        <div class="command-textbox-div">
                            <EditForm Model="@exampleModel" OnSubmit="@HandleCommandSubmit" class="command-input-form">
                                <InputText @bind-Value="commandInput" class="command-input-textbox" />
                            </EditForm>
                        </div>
                        <div class="run-command-button" @onclick="HandleCommandSubmit">Run Command</div>
                    </div>
                </div>
            </div>
            <div class="output-container box">
                <div class="window-title-container">
                    <p class="window-title">Output</p>
                    <div class="hr-lines"></div>
                    <span>&#9781</span>
                </div>
                <div class="box-content">
                    <textarea readonly class="outputTextArea">@outputText</textarea>
                </div>
            </div>
        </div>
        <div class="controls">
            <div class="button">Load</div>
            <div class="button" @onclick="PrintButton">Print</div>
            <div class="button" @onclick="AssembleButton">Assemble</div>
            <div class="button" @onclick="RunButton">Run</div>
            <div class="button" @onclick="ClearButton">Clear</div>
        </div>
    </div>
</div>


@code {
    string programInput = "";
    string commandInput = "";
    public static string outputText = "";

    public class ExampleModel
    {
        public string? Name { get; set; }
    }

    private ExampleModel exampleModel = new();

    private ExampleModel exampleModel2 = new();

    private void HandleInputSubmit()
    {
        RunButton();
    }

    private void HandleCommandSubmit()
    {
        if (!string.IsNullOrEmpty(commandInput))
        {
            outputText += (">> " + commandInput + "\n");
            ComputerConsole.ParseCommand(commandInput);
            commandInput = "";
        }
    }

    private void HandleOutputSubmit()
    {
        RunButton();
    }

    private void PrintButton()
    {
        ComputerConsole.ParseCommand("print");
    }

    private void RunButton()
    {
        ComputerConsole.ParseCommand("run");
    }

    private void AssembleButton()
    {
        Computer.AssembleFromGUI(programInput);
    }

    private void ClearButton()
    {
        ComputerConsole.ParseCommand("clear");
        outputText = "";
    }

    Computer c = new Computer();
}
